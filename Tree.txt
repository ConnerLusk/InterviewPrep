 A tree is a nonlinear hierarchical data structure that consists of nodes connected by edges
 Pros of using trees
  - Different tree data structures allow quicker and easier access to the data as it is a non-linear data structure
 Termonology
  - Node
    - A node is an entity that contains a key or value and pointers to its child nodes
    - The last nodes of each path are called leaf nodes or external nodes that do not contain a link/pointer to child nodes
    - The node having at least a child node is called an internal node
  - Edge
    - It is the link between any two nodes
  - Root
    - Topmost node of a tree
  - Height of a Node
    - The number of edges from the node to the deepest leaf
      - The longest path from the node to a leaf node
  - Depth of a Node
    - The number of edges from the root to the node
  - Height of a Tree
    - Height of the root node or the depth of the deepest node
  - Degree of a Node
    - Total number of branches of that node
  - Forest
    - A collection of disjoint trees
Types of trees
  - Binary Tree
  - Binary Search Tree
  - AVL Tree
  - B-Tree
Tree applications
  - Binary Search Trees(BSTs) are used to quickly check whether an element is present in a set or not
  - Heap is a kind of tree that is used for heap sort
  - A modified version of a tree called Tries is used in modern routers to store routing information
  - Most popular databases use B-Trees and T-Trees
  - Compilers use a syntax tree to validate the syntax of every program you write